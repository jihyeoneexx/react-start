{"version":3,"sources":["Movies.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","Movies","medium_cover_image","id","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAyBeA,MAtBf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAG1C,OAAO,sBAAKC,UAAU,QAAf,UAEC,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IAEzC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,SAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACX,oBAAgBL,UAAU,eAA1B,SAA0CI,GAAjCC,QAId,mBAAGL,UAAU,gBAAb,SAA8BH,EAAQS,MAAM,EAAG,cCwC1CC,G,kNArDbC,MAAS,CACLC,WAAW,EACXC,OAAQ,I,EAGZC,U,sBAAY,8BAAAC,EAAA,sEAKEC,IAAMC,IAAI,yEALZ,gBAGOJ,EAHP,EAEJK,KACIA,KAAOL,OAQd,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAX5B,2C,uDAcZ,WACIQ,KAAKN,c,oBAIT,WACQ,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAEnB,OACA,yBAASV,UAAU,YAAnB,SAEKS,EACG,qBAAKT,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAGL,qBAAKA,UAAU,SAAf,SACMU,EAAOP,KAAI,SAAAe,GACX,OAAO,cAACC,EAAD,CAERxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QALTmB,EAAMG,e,GAvCjBC,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.189c6027.chunk.js","sourcesContent":["import react from \"react\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}){\r\n    // state가 필요없기 때문에 Class component일 필요 없음\r\n    // function component의 인자로서 props 자체가 아니라 props 내부의 특정 값을 가져올 때는 꼭 {bracket}으로 감싸야함\r\n    return <div className=\"movie\">\r\n\r\n            <img src={poster} alt={title} title={title}></img>\r\n\r\n        <div className=\"movie-data\">\r\n            <h3 className=\"movie_title\">{title}</h3>\r\n            <h5 className=\"movie_year\">{year}</h5>\r\n            <ul className=\"genres\">\r\n                {genres.map((genre, index) =>\r\n                (<li key={index} className=\"genres_genre\">{genre}</li>\r\n                ))}\r\n                {/* map 함수는 array의 각기 요소를 인자로 삼는 외에도, 자동으로 index(number)를 argument로 제공함 === key prop으로 사용 가능 */}\r\n            </ul>\r\n            <p className=\"movie_summary\">{summary.slice(0, 180)}</p>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movies from\"./Movies\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component{\r\n    state  = {\r\n        isLoading: true,\r\n        movies: []\r\n    };\r\n    \r\n    getMovies = async() => {\r\n        const {\r\n            data: {\r\n                data: {movies}\r\n            }\r\n        } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\r\n        // {data:{data:{moviess}}} === movies.data.data.movies (ES6 용법)\r\n        // facth와 유사한 역할을 하는 확장 기능 (npm i axios로 설치 후 import로 사용)\r\n        // 속도가 느린 편 === async와 await를 사용하여 유예시간을 갖는다 => 비동기 함수 지정 (이 함수를 기다려야해!)\r\n        // async === 비동기함수를 기다려줘 그게 뭐냐면... -> await === 이거!\r\n        // result === axios 함수가 끝나기를 기다린 후 이후 코드를 송출한다(Javascript 용법)\r\n         this.setState({ movies, isLoading: false });\r\n         // axios의 movies를 state의 movies array로 render\r\n    } \r\n    componentDidMount(){\r\n        this.getMovies();\r\n        // component가 mount 완료되면(render이후 시점) getMovies를 호출한다. \r\n        // but, axios 기능은 속도가 느리기 때문에, 완전히 로딩될 때까지 시간이 필요함 => async\r\n         }\r\n    render(){\r\n            const { isLoading, movies } = this.state;\r\n            // {brackets} === isLoading은 this.state 오브젝트의 안에 있는 요소\r\n            return (\r\n            <section className=\"container\">\r\n                {/* JSX의 class component 안에 있는 html의 class는 className으로 표기, react상의 혼동 방지, html 코드 상에서는 class로 표기된다! */}\r\n                {isLoading ?(\r\n                    <div className=\"loader\">\r\n                        <span className=\"loader_text\">Loading...</span>\r\n                    </div>\r\n                ) : ( \r\n                   <div className=\"movies\">\r\n                       { movies.map(movie => {\r\n                         return <Movies \r\n                        key={movie.id}\r\n                        year={movie.year} \r\n                        title={movie.title} \r\n                        summary={movie.summary}\r\n                        poster={movie.medium_cover_image}\r\n                        genres={movie.genres}\r\n                        />\r\n                       })}\r\n                    </div>\r\n                )}\r\n            </section>\r\n            );\r\n    }\r\n}\r\n  \r\n  export default App;\r\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}